import pygame
import random

class Graph:
    def __init__(self):
        # Initialize Pygame
        pygame.init()

        # Set up the display
        self.screen = pygame.display.set_mode((800, 600))

        # Set up the font
        self.font = pygame.font.SysFont(None, 30)

        # Set up the graph data structure
        self.graph = {0: (400, 550)}

        # Set up the variables for generating random data
        self.data_range = (50, 750)
        self.data_step = 14
        self.data_max_length = (self.data_range[1] - self.data_range[0]) // self.data_step

    def run(self):
        while True:
            # Check for events
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    quit()

            # Fill the background
            self.screen.fill((255, 255, 255))

            # Generate a new data point
            new_data = random.randint(50, 550)

            # Update the graph data structure
            new_node = (len(self.graph) * self.data_step + self.data_range[0], 550 - new_data)
            self.graph[len(self.graph)] = new_node
            if len(self.graph) > self.data_max_length:
                del self.graph[0]

            # Draw the x-axis and y-axis
            pygame.draw.line(self.screen, (0, 0, 0), (50, 550), (750, 550), 2)
            pygame.draw.line(self.screen, (0, 0, 0), (50, 550), (50, 50), 2)

            # Draw the x-axis label
            text = self.font.render('Time', True, (0, 0, 0))
            self.screen.blit(text, (400, 570))

            # Draw the y-axis label
            text = self.font.render('Value', True, (0, 0, 0))
            text = pygame.transform.rotate(text, 90)
            self.screen.blit(text, (20, 300))

            # Draw the graph
            for i in range(len(self.graph) - 1):
                if i in self.graph and i+1 in self.graph:
                    pygame.draw.line(self.screen, (0, 0, 0), self.graph[i], self.graph[i+1], 2)

            # Update the screen
            pygame.display.update()

            # Set the frame rate
            pygame.time.Clock().tick(60)

if __name__ == "__main__":
    graph = Graph()
    graph.run()
