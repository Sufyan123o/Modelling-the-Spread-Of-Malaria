import pygame, sys
import numpy as np

susceptible_people_col = (211,211,211)
semi_immune_col = (144, 238, 144) #light green PKA WHITE
infected_people_col = (255, 0, 0) #infected people
dead_col = (0, 0, 0) #black
immune_col = (255, 165, 0)
male_mosq_col = (0, 100, 255) #BLUE
susceptible_mosquito_col = (50, 150, 50) #GREEN
infected_mosquitoes_col = (255,0,0) #red
background_col = (41, 70, 90)


class mosquito(pygame.sprite.Sprite):
    def __init__(
        self,
        x,
        y,
        width,
        height,
        color= dead_col,
        radius=5,
        velocity=[0, 0],
        randomize=False,
    ): #initialising the values for the human
        super().__init__()
        self.image = pygame.Surface([radius * 2, radius * 2]) #drawing mosquitos.
        self.image.fill(background_col)
        pygame.draw.circle(self.image, color, (radius, radius), radius)

        self.rect = self.image.get_rect()
        self.pos = np.array([x, y], dtype=np.float64) #store as np array
        self.vel = np.asarray(velocity, dtype=np.float64)

        self.killswitch_on = False
        self.recovered = False
        self.randomize = randomize

        self.WIDTH = width
        self.HEIGHT = height
    
    def update(self):

        self.pos += self.vel

        x, y = self.pos

        # Periodic boundary conditions
        if x < 0:
            self.pos[0] = self.WIDTH #if the person goes off screen it puts them on the other side
            x = self.WIDTH
        if x > self.WIDTH:
            self.pos[0] = 0
            x = 0
        if y < 0:
            self.pos[1] = self.HEIGHT
            y = self.HEIGHT
        if y > self.HEIGHT:
            self.pos[1] = 0
            y = 0

        self.rect.x = x
        self.rect.y = y
        


WIDTH = 600
HEIGHT = 400

pygame.init()
screen = pygame.display.set_mode([WIDTH, HEIGHT])

container = pygame.sprite.Group()

for i in range(10):
    x = np.random.randint(0, WIDTH + 1)
    y = np.random.randint(0, HEIGHT + 1)
    vel = np.random.rand(2) * 2 - 1
    np.random.rand(2)
    susceptible_mosquito = mosquito(x, y, WIDTH, HEIGHT, color = susceptible_people_col, velocity = vel )
    container.add(susceptible_mosquito)

T = 2000000000

clock = pygame.time.Clock()

for i in range(T):
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            break
            
        container.update()
        
        screen.fill(background_col)
        
        container.draw(screen)
        
        pygame.display.flip()
        
        clock.tick(60)